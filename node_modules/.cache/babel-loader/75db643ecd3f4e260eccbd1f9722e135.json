{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\play\\\\Desktop\\\\react-admin-project\\\\src\\\\containers\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { createDemo1Action, createDemo2Action } from '../../redux/action_creators/test_action';\nimport { reqLogin } from '../../api';\nimport './css/login.less';\nimport logo from './images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _Form.Item;\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      const {\n        username,\n        password\n      } = values;\n      reqLogin(username, password); //console.log('Received values of form: ', values);\n    };\n\n    this.validatePwd = (rule, value, callback) => {\n      console.log('validatePwd()', rule, value);\n\n      if (!value) {\n        callback('密码必须输入');\n      } else if (value.length < 4) {\n        callback('密码长度不能小于4位');\n      } else if (value.length > 12) {\n        callback('密码长度不能大于12位');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('密码必须是英文、数字或下划线组成');\n      } else {\n        callback(); // 验证通过\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React\\u9879\\u76EE: \\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u7528\\u6237\\u767B\\u9646\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          name: \"normal_login\",\n          className: \"login-form\",\n          onFinish: this.onFinish,\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              whitespace: true,\n              message: '用户名必须输入'\n            }, {\n              min: 4,\n              message: '用户名至少4位'\n            }, {\n              max: 12,\n              message: '用户名最多12位'\n            }, {\n              pattern: /^[a-zA-Z0-9_]+$/,\n              message: '用户名必须是英文、数字或下划线组成'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this),\n              placeholder: \"\\u7528\\u6237\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            name: \"password\",\n            rules: [{\n              validator: this.validatePwd\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u5BC6\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              children: \"\\u767B\\u9646\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  test: state.test\n}), {\n  demo1: createDemo1Action,\n  demo2: createDemo2Action\n})(Login);","map":{"version":3,"sources":["C:/Users/play/Desktop/react-admin-project/src/containers/login/login.jsx"],"names":["React","Component","UserOutlined","LockOutlined","connect","axios","createDemo1Action","createDemo2Action","reqLogin","logo","Item","Login","onFinish","values","username","password","validatePwd","rule","value","callback","console","log","length","test","componentDidMount","props","render","required","whitespace","message","min","max","pattern","validator","state","demo1","demo2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { createDemo1Action, createDemo2Action } from '../../redux/action_creators/test_action'\r\nimport {reqLogin} from '../../api'\r\nimport './css/login.less'\r\nimport logo from './images/logo.png'\r\nconst Item = Form.Item\r\n\r\nclass Login extends Component {\r\n    onFinish = (values) => {\r\n        const {username, password} = values\r\n        reqLogin(username, password)\r\n        //console.log('Received values of form: ', values);\r\n    }\r\n\r\n    validatePwd = (rule, value, callback) => {\r\n        console.log('validatePwd()', rule, value)\r\n        if (!value) {\r\n            callback('密码必须输入')\r\n        } else if (value.length < 4) {\r\n            callback('密码长度不能小于4位')\r\n        } else if (value.length > 12) {\r\n            callback('密码长度不能大于12位')\r\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n            callback('密码必须是英文、数字或下划线组成')\r\n        } else {\r\n            callback() // 验证通过\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>React项目: 后台管理系统</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登陆</h2>\r\n                    <Form name=\"normal_login\" className=\"login-form\" onFinish={this.onFinish}>\r\n                        <Item name=\"username\" rules={[\r\n                            { required: true, whitespace: true, message: '用户名必须输入' },\r\n                            { min: 4, message: '用户名至少4位' },\r\n                            { max: 12, message: '用户名最多12位' },\r\n                            { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' }]}>\r\n\r\n                            <Input\r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                placeholder=\"用户名\"\r\n                            />\r\n                        </Item>\r\n                        <Item name=\"password\" rules={[{ validator: this.validatePwd }]}>\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Item>\r\n                        <Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登陆\r\n                                </Button>\r\n                        </Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({test: state.test}),\r\n    {\r\n        demo1: createDemo1Action,\r\n        demo2: createDemo2Action\r\n    }\r\n)(Login)\r\n"]},"metadata":{},"sourceType":"module"}